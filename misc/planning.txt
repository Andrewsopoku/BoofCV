Next Release

- TODO Regression: Scene Classification
- TODO Naive implementation of DLS

Less High Priority Next Release

- Stereo Rectification
  * Make it easier.  Single class like in pyboof
- Stereo Disparity
  * make float images contain actual disparity, not offset.  negative values for invalid

- Regression
  * Chessboard image border to fiducial regression
  * Support binary features in Detect/Describe regression
  * Standardized format which is easy for human and machine to read?
    - This should enable easy automated checks for significant change
  * Automate fault detection from regression tests
  * Split runtime regression off from stability

- Unit Tests for applications
  * compare output to expected file bit by bit

- BinaryPolygonConvexDetector
  * Reject a shape if after optimization contour points are really far away from it on average
  * New binarization.  Run square binary twice with scale 0.9 and 1.1 .  Then output binary is the AND of the two
    - Should suppress noisy regions?
  * Figure out a way to get it to work with smaller splits.  Like the contour around the letter F
    - The initial polygon fit is the weak point

- Improve pose estimate for calibration fiducials

- Assisted Calibration
  * binary pattern grid
  * Ability to change calibration model and recompute
  * Ability to remove images and recompute

Face Detectors
 - https://github.com/nenadmarkus/pico
 - http://libccv.org/doc/doc-scd/

Future

- Dense Features
  * See if pruning low contrast regions improve scoring
    - Prune X fraction per image or global threshold across all images
    - Print debugging info to help with tuning?
  * See if different image sampling methods can improve scene recognition

- Fiducial Square
  * Regression tests that can determine if orientation is consistent
    - If multiple squares on same surface see if their orientation is the same
  * Image fiducial.  Look at all the images and compute pixel weighting of pattern based on variance.
                     Put all patterns which meet the correctness fraction then use the weighted sum to
                     select the winner.

- Multi camera calibration using square binary patterns.

- Sparse Bundle Adjustment?

- Look at Sandreas's NewWarp?

- Look at OpenCV's watershed example.  It's actually a useful technique!

- Background Model
  * GMM model
  * Shadow removal
  * remove support for Planar once Interleaved is supported enough

- ImplSsdCorner_S16
  * Handle the border.  Currently is is just skipped
  * If the image is resized that will cause problems since the border can affect the location of local
    maximums
  * Createa generic function for handling borders?  Give it a function and it returns a solution?